{"version":3,"sources":["./node_modules/ngx-order-pipe/__ivy_ngcc__/fesm2015/ngx-order-pipe.js","./src/app/services/firebase.service.ts","./src/app/services/user.service.ts","./src/app/services/alarm.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAA+C;;AAEP;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,SAAS;AACxB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gDAAgD,+BAA+B;AAC/E,kBAAkB,0DAAmB,EAAE,gDAAgD;AACvF,4BAA4B,CAAC,+DA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","file":"default~pages-homeagent-homeagent-module~pages-homecitizen-homecitizen-module.js","sourcesContent":["import { Pipe, NgModule } from '@angular/core';\n\nimport * as Éµngcc0 from '@angular/core';\nclass OrderPipe {\n    /**\n     * Check if a value is a string\n     *\n     * @param value\n     */\n    static isString(value) {\n        return typeof value === \"string\" || value instanceof String;\n    }\n    /**\n     * Sorts values ignoring the case\n     *\n     * @param a\n     * @param b\n     */\n    static caseInsensitiveSort(a, b) {\n        if (OrderPipe.isString(a) && OrderPipe.isString(b)) {\n            return a.localeCompare(b);\n        }\n        return OrderPipe.defaultCompare(a, b);\n    }\n    /**\n     * Default compare method\n     *\n     * @param a\n     * @param b\n     */\n    static defaultCompare(a, b) {\n        if (a && a instanceof Date) {\n            a = a.getTime();\n        }\n        if (b && b instanceof Date) {\n            b = b.getTime();\n        }\n        if (a === b) {\n            return 0;\n        }\n        if (a == null) {\n            return 1;\n        }\n        if (b == null) {\n            return -1;\n        }\n        return a > b ? 1 : -1;\n    }\n    /**\n     * Parse expression, split into items\n     * @param expression\n     * @returns {string[]}\n     */\n    static parseExpression(expression) {\n        expression = expression.replace(/\\[(\\w+)\\]/g, \".$1\");\n        expression = expression.replace(/^\\./, \"\");\n        return expression.split(\".\");\n    }\n    /**\n     * Get value by expression\n     *\n     * @param object\n     * @param expression\n     * @returns {any}\n     */\n    static getValue(object, expression) {\n        for (let i = 0, n = expression.length; i < n; ++i) {\n            if (!object) {\n                return;\n            }\n            const k = expression[i];\n            if (!(k in object)) {\n                return;\n            }\n            if (typeof object[k] === \"function\") {\n                object = object[k]();\n            }\n            else {\n                object = object[k];\n            }\n        }\n        return object;\n    }\n    /**\n     * Set value by expression\n     *\n     * @param object\n     * @param value\n     * @param expression\n     */\n    static setValue(object, value, expression) {\n        let i;\n        for (i = 0; i < expression.length - 1; i++) {\n            object = object[expression[i]];\n        }\n        object[expression[i]] = value;\n    }\n    transform(value, expression, reverse, isCaseInsensitive = false, comparator) {\n        if (!value) {\n            return value;\n        }\n        if (Array.isArray(expression)) {\n            return this.multiExpressionTransform(value, expression, reverse, isCaseInsensitive, comparator);\n        }\n        if (Array.isArray(value)) {\n            return this.sortArray(value.slice(), expression, reverse, isCaseInsensitive, comparator);\n        }\n        if (typeof value === \"object\") {\n            return this.transformObject(Object.assign({}, value), expression, reverse, isCaseInsensitive, comparator);\n        }\n        return value;\n    }\n    /**\n     * Sort array\n     *\n     * @param value\n     * @param expression\n     * @param reverse\n     * @param isCaseInsensitive\n     * @param comparator\n     * @returns {any[]}\n     */\n    sortArray(value, expression, reverse, isCaseInsensitive, comparator) {\n        const isDeepLink = expression && expression.indexOf(\".\") !== -1;\n        if (isDeepLink) {\n            expression = OrderPipe.parseExpression(expression);\n        }\n        let compareFn;\n        if (comparator && typeof comparator === \"function\") {\n            compareFn = comparator;\n        }\n        else {\n            compareFn = isCaseInsensitive\n                ? OrderPipe.caseInsensitiveSort\n                : OrderPipe.defaultCompare;\n        }\n        const array = value.sort((a, b) => {\n            if (!expression) {\n                return compareFn(a, b);\n            }\n            if (!isDeepLink) {\n                if (a && b) {\n                    return compareFn(a[expression], b[expression]);\n                }\n                return compareFn(a, b);\n            }\n            return compareFn(OrderPipe.getValue(a, expression), OrderPipe.getValue(b, expression));\n        });\n        if (reverse) {\n            return array.reverse();\n        }\n        return array;\n    }\n    /**\n     * Transform Object\n     *\n     * @param value\n     * @param expression\n     * @param reverse\n     * @param isCaseInsensitive\n     * @param comparator\n     * @returns {any[]}\n     */\n    transformObject(value, expression, reverse, isCaseInsensitive, comparator) {\n        const parsedExpression = OrderPipe.parseExpression(expression);\n        let lastPredicate = parsedExpression.pop();\n        let oldValue = OrderPipe.getValue(value, parsedExpression);\n        if (!Array.isArray(oldValue)) {\n            parsedExpression.push(lastPredicate);\n            lastPredicate = null;\n            oldValue = OrderPipe.getValue(value, parsedExpression);\n        }\n        if (!oldValue) {\n            return value;\n        }\n        OrderPipe.setValue(value, this.transform(oldValue, lastPredicate, reverse, isCaseInsensitive), parsedExpression);\n        return value;\n    }\n    /**\n     * Apply multiple expressions\n     *\n     * @param value\n     * @param {any[]} expressions\n     * @param {boolean} reverse\n     * @param {boolean} isCaseInsensitive\n     * @param {Function} comparator\n     * @returns {any}\n     */\n    multiExpressionTransform(value, expressions, reverse, isCaseInsensitive = false, comparator) {\n        return expressions.reverse().reduce((result, expression) => {\n            return this.transform(result, expression, reverse, isCaseInsensitive, comparator);\n        }, value);\n    }\n}\nOrderPipe.Éµfac = function OrderPipe_Factory(t) { return new (t || OrderPipe)(); };\nOrderPipe.Éµpipe = Éµngcc0.ÉµÉµdefinePipe({ name: \"orderBy\", type: OrderPipe, pure: false });\n/*@__PURE__*/ (function () { Éµngcc0.ÉµsetClassMetadata(OrderPipe, [{\n        type: Pipe,\n        args: [{\n                name: \"orderBy\",\n                pure: false\n            }]\n    }], null, null); })();\n\n/**\n * Created by vadimdez on 20/01/2017.\n */\nclass OrderModule {\n}\nOrderModule.Éµmod = Éµngcc0.ÉµÉµdefineNgModule({ type: OrderModule });\nOrderModule.Éµinj = Éµngcc0.ÉµÉµdefineInjector({ factory: function OrderModule_Factory(t) { return new (t || OrderModule)(); }, providers: [OrderPipe] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(OrderModule, { declarations: [OrderPipe], exports: [OrderPipe] }); })();\n/*@__PURE__*/ (function () { Éµngcc0.ÉµsetClassMetadata(OrderModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [OrderPipe],\n                exports: [OrderPipe],\n                providers: [OrderPipe]\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { OrderModule, OrderPipe };\n\n//# sourceMappingURL=ngx-order-pipe.js.map","import { Injectable } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AngularFireAuth} from '@angular/fire/auth';\nimport {User} from '../models/user';\nimport {UserService} from './user.service';\nimport { FCM } from 'cordova-plugin-fcm-with-dependecy-updated/ionic/ngx';\nimport {Platform} from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseService {\n\n  userData: User;\n  idagent: number;\n  idcitizen: number;\n  token: string;\n  iduser: number;\n\n  constructor(public firebaseAuth: AngularFireAuth,\n              public router: Router,\n              private fcm: FCM,\n              public userservice: UserService,\n              public platform: Platform) {\n  }\n\n  async signin(email: string, password: string) {\n    await this.firebaseAuth.signInWithEmailAndPassword(email, password).then(res => {\n      if (this.platform.is('android')) {\n        this.fcm.getToken().then(data => {\n          this.token = data;\n          console.log(data);\n          localStorage.setItem('token', data);\n        });\n      }\n      localStorage.setItem('user', JSON.stringify(res.user));\n      this.userData = JSON.parse(localStorage.getItem('user'));\n      this.userservice.getUserByEmail(email).subscribe(data => {\n        this.userData = data;\n        console.log(data);\n        this.idagent = data.idAgent;\n        this.idcitizen = data.idCitizen;\n        this.gotodash(this.idcitizen, this.idagent);\n        console.log(data);\n        console.log(this.idagent);\n        console.log(this.idcitizen);\n      });\n    }).catch((error) => {\n      window.alert(error.message);\n    });\n  }\n\n  gotodash(idcitizen, idagent){\n    if (idcitizen){\n      localStorage.setItem('idCitizen', idcitizen);\n      this.router.navigateByUrl('/homecitizen');\n    }else if (idagent){\n      localStorage.setItem('idAgent', idagent);\n      this.router.navigateByUrl('/homeagent');\n    }else if (!idcitizen && !idagent){\n      window.alert('User not authorized');\n    }\n\n  }\n\n  get isLoggedIn(): boolean {\n    const user = JSON.parse(localStorage.getItem('user'));\n    return (user !== null);\n  }\n\n  logout() {\n    return this.firebaseAuth.signOut().then(() => {\n      localStorage.removeItem('user');\n      localStorage.removeItem('idManager');\n      localStorage.removeItem('idAgent');\n      this.router.navigateByUrl('/slides');\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Observable, of} from \"rxjs\";\nimport {User} from \"../models/user\";\nimport {catchError, tap} from \"rxjs/operators\";\n\nconst userbyemailurl = 'http://localhost:8080/user/getByEmail/';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json'\n  })\n};\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n\n  getUserByEmail(email: string): Observable<User> {\n\n    return this.http.get<User>(userbyemailurl + '?email=' + email).pipe(tap(_ => console.log(`fetched user email=${email}`)),\n      catchError(this.handleError<User>(`getUser email`))\n    );\n  }\n\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      console.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport {Alarm} from '../models/alarm';\nimport {catchError, tap} from 'rxjs/operators';\nimport {Observable, of} from 'rxjs';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\nconst getUrl = 'http://localhost:8080/alarm/getAllAlarmByIdCitizen/';\nconst addAlarmUrl = 'http://localhost:8080/alarm/addAlarm';\nconst getAlarmsByIdCitizenUrl = 'http://localhost:8080/alarm/getAllAlarmByIdCitizen/';\nconst deleteUrl = 'http://localhost:8080/alarm/deleteAlarm/';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json'\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlarmService {\n\n  constructor(private http: HttpClient) { }\n\n  getAlarms(idcitizen: string): Observable<Alarm[]> {\n    return this.http.get<Alarm[]>(getUrl + idcitizen).pipe(tap(_ => console.log('fetched alarms')),\n      catchError(this.handleError<Alarm[]>('getAlarms', []))\n    );\n  }\n\n  addAlarm(idType: string, idCitizen: string, alarm: Alarm): Observable<Alarm> {\n    return this.http.post<Alarm>(addAlarmUrl + '?idType=' + idType + '&idCitizen=' + idCitizen, alarm, httpOptions).pipe(tap(_ => console.log('added alarm')),\n      catchError(this.handleError<Alarm>('addAlarm'))\n    );\n  }\n\n  getAlarmsByIdCitizen(idcitizen: string): Observable<Alarm[]> {\n    return this.http.get<Alarm[]>(getAlarmsByIdCitizenUrl + idcitizen).pipe(tap(_ => console.log('fetched alarms')),\n      catchError(this.handleError<Alarm[]>('getAlarmsByIdCitizen', []))\n    );\n  }\n\n  deleteAlarm(idAlarm: string): Observable<{}> {\n    return  this.http.delete(deleteUrl + idAlarm, httpOptions).pipe(tap(_ => console.log('eliminated alarm')),\n      catchError(this.handleError<Alarm>('deleteAlarm'))\n    );\n  }\n\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      console.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n\n\n"],"sourceRoot":"webpack:///"}